# -*- coding: utf-8 -*-
"""Derivadas Numéricas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rMqPjSJJTTjuGqtIuB7zKDrwXK1mLVhB
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.misc import derivative

def poly(x, a=1, b=2, c=-3, d=1):
    """
    Função polinomial de terceiro grau.

    Parâmetros:
    x (float ou array): Valor(es) de x.
    a, b, c, d (float): Coeficientes do polinômio.

    Retorna:
    float ou array: Valor(es) do polinômio.
    """
    return a * x**3 + b * x**2 + c * x + d

def derivada_poly(x, a=1, b=2, c=-3, d=1):
    """
    Calcula as derivadas exatas de primeira e segunda ordem do polinômio.

    Parâmetros:
    x (float ou array): Valor(es) de x.
    a, b, c, d (float): Coeficientes do polinômio.

    Retorna:
    tuple: Derivadas de primeira e segunda ordem.
    """
    der_1 = 3 * a * x**2 + 2 * b * x + c
    der_2 = 6 * a * x + 2 * b
    return der_1, der_2

# Cria um array de valores x
x = np.linspace(-2, 2, 101)

# Calcula os valores y da função polinomial
y = poly(x)

# Plota a função polinomial
plt.plot(x, y, label="f(x)")
plt.grid()
plt.legend()
plt.title("Função Polinomial")
plt.xlabel("x")
plt.ylabel("f(x)")
plt.savefig("graficos/grafico_polinomio.png")  # Salva o gráfico
plt.show()

# Calcula as derivadas numéricas
d_1 = derivative(poly, x, dx=0.1, n=1, order=5)
d_2 = derivative(poly, x, dx=0.1, n=2, order=5)

# Calcula as derivadas exatas
d1_exato, d2_exato = derivada_poly(x)

# Plota as derivadas exatas e numéricas
plt.plot(x, d1_exato, 'o', alpha=0.5, label="Derivada Exata (1ª ordem)")
plt.plot(x, d_1, label="Derivada Numérica (1ª ordem)")
plt.grid()
plt.legend()
plt.title("Derivadas de Primeira Ordem")
plt.xlabel("x")
plt.ylabel("f'(x)")
plt.savefig("graficos/grafico_derivadas_1.png")  # Salva o gráfico
plt.show()

plt.plot(x, d2_exato, 'o', alpha=0.5, label="Derivada Exata (2ª ordem)")
plt.plot(x, d_2, label="Derivada Numérica (2ª ordem)")
plt.grid()
plt.legend()
plt.title("Derivadas de Segunda Ordem")
plt.xlabel("x")
plt.ylabel("f''(x)")
plt.savefig("graficos/grafico_derivadas_2.png")  # Salva o gráfico
plt.show()